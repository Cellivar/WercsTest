@using WercsTest.DAL
@model dynamic

@{
	ViewBag.Title = "Wercs Test";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
	// Not the best way to handle this, but it'll work for fast'n'dirty.
	var LanguageData = @Html.Raw(Json.Encode(ViewData["sqlLanguages"]));

	function ShowLanguageModal(langcode) {
		if (langcode === "undefined") {
			return null;
		}

		var languageObj = FindLanguage(langcode);
		if (languageObj === null) {
			return null;
		}

		$("#modalTitle").empty().append(languageObj["F_Language_Name"].toLowerCase());
		// Gross, but bett
		var modalContent = "";
		for (var property in languageObj) {
			// Not the best way to build this, but it'll do for now.
			modalContent += "<span class='modal-property'>";
			modalContent += property.replace(/F_/g, "").replace(/_/g, " ").toLowerCase() + ": ";
			modalContent += "</span>";
			modalContent += languageObj[property] + "<br>";
		}
		$("#modalContent").empty().append(modalContent);
		$("#langModal").css("display", "");
	}

	function HideLanguageModal() {
		$("#langModal").css("display", "none");
	}

	function FindLanguage(langcode) {
		if (langcode === "undefined") {
			return null;
		}

		for (var i = 0, match = null; i < LanguageData.length; ++i) {
			if (LanguageData[i]["F_Language"] === langcode) {
				match = LanguageData[i];
				break;
			}
		}

		return match;
	}

	$(document).ready(function () {
		// Reversing button ajax post
		$("#reverseButton").click(function() {
			$.post
			("@Url.Action("ReverseText","Home")", { textToReverse: $("#stringToReverse").val() }, function(data, status, jqxhr) {
					$("#stringReverseOutput").empty().append(data);
				}
			);
		});

		$("#xmlGetLanguages").click(function() {
			$.get
			("@Url.Action("LanguagesXml", "Home")", function(data) {
				$("#xmlDocument").empty().append("Languages:<br>");
				$(data).each(function(index, element) {
					$("#xmlDocument").append(element.toLowerCase()).append("<br>");
				});
			});
		});
	});
</script>
<style>
	.bordered {
		border: 2px solid black;
	}
	.spaced {
		margin: 10px;
		padding: 10px;
	}
	.floating-right {
		float: right;
		background-color: white;
	}
	table, td {
		border: 1px solid black;
		text-align: center;
	}

	.modal {
		margin-top: -250px;
		margin-left: -150px;
		background-color: white;
		position: fixed;
		top: 50%;
		left: 50%;

		padding: 10px;
	}

	.modal-property {
		text-transform: capitalize;
		font-weight: bold;

	}
	
	.language-name {
		text-transform: capitalize;
	}

	#modalCloseButton {
		text-align: center;
	}
</style>

<div id="xmlDocument" class="bordered spaced floating-right language-name">
	<button id="xmlGetLanguages">Get XML Languages</button>
</div>


<div id="stringReverse" class="bordered spaced">
	String reverse: 
	<button id="reverseButton">Reverse String</button>
	<input id="stringToReverse" value="My country ‘tis of thee."/>
	<br/>
	Output: <span id="stringReverseOutput"></span>
</div>


<div id="sqlSelects" class="bordered spaced">
	Sql Selections: <br/>
	<table cellpadding="0" cellspacing="0">
		<thead>
			<th>Language</th>
			<th>2-letter</th>
			<th></th>
		</thead>
		<tbody>
			@foreach (T_Language language in (Array)ViewData["sqlLanguages"])
			{
				<tr>
					<td class="language-name">@language.F_Language_Name.ToLower()</td>
					<td>@language.F_Language</td>
					<td>
						<button onclick="ShowLanguageModal('@language.F_Language')">More</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>


<div id="langModal" style="display:none" class="modal bordered">
	<div id="modalTitle" class="language-name"></div>
	<div id="modalContent"></div>
	<div class="modal-button">
		<button id="modalCloseButton" onclick="HideLanguageModal()">Close</button>
	</div>
</div>